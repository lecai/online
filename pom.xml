<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.threathunter.nebula</groupId>
    <artifactId>nebula</artifactId>
    <version>1.1.0</version>
    <packaging>pom</packaging>
    <name>nebula</name>
    <url>http://maven.apache.org</url>
    <modules>
        <module>nebula-common</module>
        <module>nebula-onlineserver</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <nebula.version>1.1.0</nebula.version>

        <threathunter.greyhound>1.1.0</threathunter.greyhound>
        <threathunter.bordercollie>1.1.0</threathunter.bordercollie>
        <threathunter.greatdant>1.1.0</threathunter.greatdant>
        <threathunter_common.version>1.0.3</threathunter_common.version>
        <babel.version>1.1.0</babel.version>

        <slf4j.version>1.7.7</slf4j.version>
        <logback.version>1.1.7</logback.version>
        <jackson.version>1.9.13</jackson.version>
        <jopt-simple.version>4.9</jopt-simple.version>
        <commons.validator.version>1.6</commons.validator.version>
        <junit.version>4.11</junit.version>
        <powermockito.version>1.6.5</powermockito.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.threathunter.nebula</groupId>
                <artifactId>nebula-common</artifactId>
                <version>${nebula.version}</version>
            </dependency>
            <dependency>
                <groupId>com.threathunter.nebula</groupId>
                <artifactId>nebula-onlineserver</artifactId>
                <version>${nebula.version}</version>
            </dependency>
            <dependency>
                <groupId>com.threathunter.nebula</groupId>
                <artifactId>nebula-testt</artifactId>
                <version>${nebula.version}</version>
                <scope>test</scope>
            </dependency>
            
            <dependency>
                <groupId>com.threathunter.greatdant</groupId>
                <artifactId>greatdant-core</artifactId>
                <version>${threathunter.greatdant}</version>
            </dependency>
            <dependency>
                <groupId>com.threathunter.bordercollie</groupId>
                <artifactId>bordercollie-core</artifactId>
                <version>${threathunter.bordercollie}</version>
            </dependency>
            <dependency>
                <groupId>com.threathunter.greyhound</groupId>
                <artifactId>greyhound-server</artifactId>
                <version>${threathunter.greyhound}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>log4j-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.jackson</groupId>
                <artifactId>jackson-jaxrs</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>net.sf.jopt-simple</groupId>
                <artifactId>jopt-simple</artifactId>
                <version>${jopt-simple.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>2.2.4</version>
            </dependency>
            <dependency>
                <groupId>com.threathunter.babel</groupId>
                <artifactId>babel-rpc</artifactId>
                <version>${babel.version}</version>
            </dependency>
            <dependency>
                <groupId>com.threathunter.common</groupId>
                <artifactId>threathunter.common</artifactId>
                <version>${threathunter_common.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-validator</groupId>
                <artifactId>commons-validator</artifactId>
                <version>${commons.validator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-junit4</artifactId>
                <version>${powermockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito</artifactId>
                <version>${powermockito.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>

    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.7</version>
                <executions>
                    <execution>
                        <id>pmd</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>validate</phase>
                    </execution>
                </executions>
                <configuration>
                    <sourceEncoding>utf-8</sourceEncoding>
                    <targetJdk>1.5</targetJdk>
                    <failOnViolation>false</failOnViolation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>3.0.4</version>
                <executions>
                    <execution>
                        <id>findbug</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <findbugsXmlOutputDirectory>
                        ${project.build.directory}/findbugs
                    </findbugsXmlOutputDirectory>
                    <failOnError>false</failOnError>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>xml-maven-plugin</artifactId>
                <version>1.0</version>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>transform</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <transformationSets>
                        <transformationSet>
                            <dir>${project.build.directory}/findbugs</dir>
                            <outputDir>${project.build.directory}/findbugs</outputDir>
                            <stylesheet>fancy-hist.xsl</stylesheet>
                            <!--<stylesheet>default.xsl</stylesheet>-->
                            <!--<stylesheet>plain.xsl</stylesheet>-->
                            <!--<stylesheet>fancy.xsl</stylesheet>-->
                            <!--<stylesheet>summary.xsl</stylesheet>-->
                            <fileMappers>
                                <fileMapper
                                        implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>.html</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>
                    </transformationSets>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.google.code.findbugs</groupId>
                        <artifactId>findbugs</artifactId>
                        <version>2.0.0</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.12.2</version>
                <configuration>
                    <showSuccess>false</showSuccess>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.5.1</version>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.7.201606060606</version>
                <executions>
                    <execution>
                        <!--
                        在maven的initialize阶段，将Jacoco的runtime agent作为VM的一个参数
                        传给被测程序，用于监控JVM中的调用。
                        -->
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>
                                ${project.build.directory}/coverage-reports/jacoco.exec
                            </destFile>
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <!--
                    在程序的verify阶段，执行report测试的程序。
                    文件的输入为perpare-agent阶段中设置或者默认的jacoco.exec.
                    参数 includes和excludes可用来选定report中过滤的类。
                    -->
                    <execution>
                        <id>default-report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/coverage-reports/jacoco.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
